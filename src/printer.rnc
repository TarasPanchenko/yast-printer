default namespace = "http://www.suse.com/1.0/yast2ns"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace config = "http://www.suse.com/1.0/configns"

printer =
  element printer {
    (text
     | printer_default
     | printcap
     | cups_installation
     | server_hostname
     | spooler
     | cups_remote_server
     | server_settings)*
  }
config = element config { text }
printer_default = element default { text }
create_remote_queue =
  element create_remote_queue { BOOLEAN }
accepting =
  element accepting { BOOLEAN }
cups-state = element cups-state { text }
# <!ELEMENT default (#PCDATA)>

# <!ELEMENT device (#PCDATA)>: redefined
device_ieee = element device_ieee { text }
ff =
  element ff { BOOLEAN }
info = element info { text }
job-sheets = element job-sheets { text }
lprng-state = element lprng-state { text }
p_name = element name { text }
ownppd = element ownppd { text }
printcap =
  element printcap {
    LIST,
    printcap_entry*
  }
y2_printcap_entry =
  accepting
  | allowusers
  | bannerend
  | bannerstart
  | denyusers
  | ff
  | info
  | location
  | manufacturer
  | model
  | p_name
  | nick
  | printcap_entry_options
  | ppd_options
  | raw
  | printcap_entry_state
  | uri
location = element location { text }
bannerstart = element bannerstart { text }
bannerend = element bannerend { text }
manufacturer = element manufacturer { text }
model = element model { text }
nick = element nick { text }
printcap_entry_state = element state { text }
printcap_entry_options = element options { text }
ppd_options =
  element ppd_options {
    LIST,
    ppd_option*
  }
ppd_option = element ppd_option { ppd_option_key, ppd_option_val }
ppd_option_key = element key { text }
ppd_option_val = element value { text }
denyusers =
  element denyusers {
    LIST,
    denyuser*
  }
denyuser = element denyuser { text }
allowusers =
  element allowusers {
    LIST,
    allowuser*
  }
allowuser = element allowuser { text }
printcap_entry = element printcap_entry { y2_printcap_entry* }
printers =
  element printers {
    LIST,
    printer+
  }
cups_installation =
  element cups_installation { SYMBOL }
raw =
  element raw {
    attribute config:type { text },
    text
  }
type = element type { text }
spooler = element spooler { text }
server_hostname = element server_hostname { text }
uri = element uri { text }

cups_listentries = LIST, element listentry { text }*

a_section = element section {
  element Allow      { cups_listentries }? &
  element AuthType   { cups_listentries }? &
  element Encryption { cups_listentries }? &
  element Order      { cups_listentries }? &
  element Require    { cups_listentries }? &
  element Satisfy    { cups_listentries }? &
  element Key   { text }? &
  element Value { text }? &
  element sections {
    LIST,
    a_section*
  }?
}

server_settings =
  element server_settings {
    element AccessLog                      { cups_listentries }? &
    element Allow                          { cups_listentries }? &
    element AuthClass                      { cups_listentries }? &
    element AuthGroupName                  { cups_listentries }? &
    element AuthType                       { cups_listentries }? &
    element AutoPurgeJobs                  { cups_listentries }? &
    element BrowseAddress                  { cups_listentries }? &
    element BrowseAllow                    { cups_listentries }? &
    element BrowseDeny                     { cups_listentries }? &
    element BrowseInterval                 { cups_listentries }? &
    element BrowseOrder                    { cups_listentries }? &
    element BrowsePoll                     { cups_listentries }? &
    element BrowsePort                     { cups_listentries }? &
    element BrowseProtocols                { cups_listentries }? &
    element BrowseLocalProtocols           { cups_listentries }? &
    element BrowseRemoteProtocols          { cups_listentries }? &
    element BrowseRelay                    { cups_listentries }? &
    element BrowseShortNames               { cups_listentries }? &
    element BrowseTimeout                  { cups_listentries }? &
    element Browsing                       { cups_listentries }? &
    element Classification                 { cups_listentries }? &
    element ClassifyOverride               { cups_listentries }? &
    element ConfigFilePerm                 { cups_listentries }? &
    element ConfigurationChangeRestriction { cups_listentries }? &
    element DataDir                        { cups_listentries }? &
    element DefaultAuthType                { cups_listentries }? &
    element DefaultCharset                 { cups_listentries }? &
    element DefaultLanguage                { cups_listentries }? &
    element DefaultPolicy                  { cups_listentries }? &
    element DefaultShared                  { cups_listentries }? &
    element Deny                           { cups_listentries }? &
    element DocumentRoot                   { cups_listentries }? &
    element Encryption                     { cups_listentries }? &
    element ErrorLog                       { cups_listentries }? &
    element FileDevice                     { cups_listentries }? &
    element FilterLimit                    { cups_listentries }? &
    element FilterNice                     { cups_listentries }? &
    element FontPath                       { cups_listentries }? &
    element Group                          { cups_listentries }? &
    element HideImplicitMembers            { cups_listentries }? &
    element HostNameLookups                { cups_listentries }? &
    element ImplicitAnyClasses             { cups_listentries }? &
    element ImplicitClasses                { cups_listentries }? &
    element Include                        { cups_listentries }? &
    element JobRetryInterval               { cups_listentries }? &
    element JobRetryLimit                  { cups_listentries }? &
    element KeepAlive                      { cups_listentries }? &
    element KeepAliveTimeout               { cups_listentries }? &
    element Krb5Keytab                     { cups_listentries }? &
    element LimitRequestBody               { cups_listentries }? &
    element Listen                         { cups_listentries }? &
    element LogFilePerm                    { cups_listentries }? &
    element LogLevel                       { cups_listentries }? &
    element MaxClients                     { cups_listentries }? &
    element MaxClientsPerHost              { cups_listentries }? &
    element MaxCopies                      { cups_listentries }? &
    element MaxJobs                        { cups_listentries }? &
    element MaxJobsPerPrinter              { cups_listentries }? &
    element MaxJobsPerUser                 { cups_listentries }? &
    element MaxLogSize                     { cups_listentries }? &
    element MaxRequestSize                 { cups_listentries }? &
    element Order                          { cups_listentries }? &
    element PageLog                        { cups_listentries }? &
    element PassEnv                        { cups_listentries }? &
    element Port                           { cups_listentries }? &
    element PreserveJobFiles               { cups_listentries }? &
    element PreserveJobHistory             { cups_listentries }? &
    element Printcap                       { cups_listentries }? &
    element PrintcapFormat                 { cups_listentries }? &
    element PrintcapGUI                    { cups_listentries }? &
    element ReloadTimeout                  { cups_listentries }? &
    element RemoteRoot                     { cups_listentries }? &
    element RequestRoot                    { cups_listentries }? &
    element Require                        { cups_listentries }? &
    element RIPCache                       { cups_listentries }? &
    element Satisfy                        { cups_listentries }? &
    element ServerAdmin                    { cups_listentries }? &
    element ServerBin                      { cups_listentries }? &
    element ServerCertificate              { cups_listentries }? &
    element ServerKey                      { cups_listentries }? &
    element ServerName                     { cups_listentries }? &
    element ServerRoot                     { cups_listentries }? &
    element ServerTokens                   { cups_listentries }? &
    element SetEnv                         { cups_listentries }? &
    element SSLListen                      { cups_listentries }? &
    element SSLPort                        { cups_listentries }? &
    element SystemGroup                    { cups_listentries }? &
    element TempDir                        { cups_listentries }? &
    element Timeout                        { cups_listentries }? &
    element User                           { cups_listentries }? &
    element sections {
      LIST,
      a_section*
    }?
  }

cups_remote_server =
  element cups_remote_server {
    element Encryption { cups_listentries }? &
    element ServerName { cups_listentries }?
  }
