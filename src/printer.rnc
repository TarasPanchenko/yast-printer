default namespace = "http://www.suse.com/1.0/yast2ns"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace config = "http://www.suse.com/1.0/configns"

printer =
  element printer {
    (text
     | printer_default
     | printcap
     | cups_installation
     | server_hostname
     | spooler
     | cups_remote_server
     | server_settings)*
  }
config = element config { text }
printer_default = element default { text }
create_remote_queue =
  element create_remote_queue { BOOLEAN }
accepting =
  element accepting { BOOLEAN }
cups-state = element cups-state { text }
# <!ELEMENT default (#PCDATA)>

# <!ELEMENT device (#PCDATA)>: redefined
device_ieee = element device_ieee { text }
ff =
  element ff { BOOLEAN }
info = element info { text }
job-sheets = element job-sheets { text }
lprng-state = element lprng-state { text }
p_name = element name { text }
ownppd = element ownppd { text }
printcap =
  element printcap {
    LIST,
    printcap_entry*
  }
y2_printcap_entry =
  accepting
  | allowusers
  | bannerend
  | bannerstart
  | denyusers
  | ff
  | info
  | location
  | manufacturer
  | model
  | p_name
  | nick
  | printcap_entry_options
  | ppd_options
  | raw
  | printcap_entry_state
  | uri
location = element location { text }
bannerstart = element bannerstart { text }
bannerend = element bannerend { text }
manufacturer = element manufacturer { text }
model = element model { text }
nick = element nick { text }
printcap_entry_state = element state { text }
printcap_entry_options = element options { text }
ppd_options =
  element ppd_options {
    LIST,
    ppd_option*
  }
ppd_option = element ppd_option { ppd_option_key, ppd_option_val }
ppd_option_key = element key { text }
ppd_option_val = element value { text }
denyusers =
  element denyusers {
    LIST,
    denyuser*
  }
denyuser = element denyuser { text }
allowusers =
  element allowusers {
    LIST,
    allowuser*
  }
allowuser = element allowuser { text }
printcap_entry = element printcap_entry { y2_printcap_entry* }
printers =
  element printers {
    LIST,
    printer+
  }
cups_installation =
  element cups_installation { SYMBOL }
raw =
  element raw {
    attribute config:type { text },
    text
  }
type = element type { text }
spooler = element spooler { text }
server_hostname = element server_hostname { text }
uri = element uri { text }

a_section = element section {
  element Allow { LIST, element listentry { text }* }? &
  element AuthType { LIST, element listentry { text }* }? &
  element Encryption { LIST, element listentry { text }* }? &
  element Order { LIST, element listentry { text }* }? &
  element Require { LIST, element listentry { text }* }? &
  element Satisfy { LIST, element listentry { text }* }? &
  element Key { text }? &
  element Value { text }? &
  element sections {
    LIST,
    a_section*
  }?
}

server_settings =
  element server_settings {
    element AccessLog { LIST, element listentry { text }* }? &
    element Allow { LIST, element listentry { text }* }? &
    element AuthClass { LIST, element listentry { text }* }? &
    element AuthGroupName { LIST, element listentry { text }* }? &
    element AuthType { LIST, element listentry { text }* }? &
    element AutoPurgeJobs { LIST, element listentry { text }* }? &
    element BrowseAddress { LIST, element listentry { text }* }? &
    element BrowseAllow { LIST, element listentry { text }* }? &
    element BrowseDeny { LIST, element listentry { text }* }? &
    element BrowseInterval { LIST, element listentry { text }* }? &
    element BrowseOrder { LIST, element listentry { text }* }? &
    element BrowsePoll { LIST, element listentry { text }* }? &
    element BrowsePort { LIST, element listentry { text }* }? &
    element BrowseProtocols { LIST, element listentry { text }* }? &
    element BrowseLocalProtocols { LIST, element listentry { text }* }? &
    element BrowseRemoteProtocols { LIST, element listentry { text }* }? &
    element BrowseRelay { LIST, element listentry { text }* }? &
    element BrowseShortNames { LIST, element listentry { text }* }? &
    element BrowseTimeout { LIST, element listentry { text }* }? &
    element Browsing { LIST, element listentry { text }* }? &
    element Classification { LIST, element listentry { text }* }? &
    element ClassifyOverride { LIST, element listentry { text }* }? &
    element ConfigFilePerm { LIST, element listentry { text }* }? &
    element ConfigurationChangeRestriction { LIST, element listentry { text }* }? &
    element DataDir { LIST, element listentry { text }* }? &
    element DefaultAuthType { LIST, element listentry { text }* }? &
    element DefaultCharset { LIST, element listentry { text }* }? &
    element DefaultLanguage { LIST, element listentry { text }* }? &
    element DefaultPolicy { LIST, element listentry { text }* }? &
    element DefaultShared { LIST, element listentry { text }* }? &
    element Deny { LIST, element listentry { text }* }? &
    element DocumentRoot { LIST, element listentry { text }* }? &
    element Encryption { LIST, element listentry { text }* }? &
    element ErrorLog { LIST, element listentry { text }* }? &
    element FileDevice { LIST, element listentry { text }* }? &
    element FilterLimit { LIST, element listentry { text }* }? &
    element FilterNice { LIST, element listentry { text }* }? &
    element FontPath { LIST, element listentry { text }* }? &
    element Group { LIST, element listentry { text }* }? &
    element HideImplicitMembers { LIST, element listentry { text }* }? &
    element HostNameLookups { LIST, element listentry { text }* }? &
    element ImplicitAnyClasses { LIST, element listentry { text }* }? &
    element ImplicitClasses { LIST, element listentry { text }* }? &
    element Include { LIST, element listentry { text }* }? &
    element JobRetryInterval { LIST, element listentry { text }* }? &
    element JobRetryLimit { LIST, element listentry { text }* }? &
    element KeepAlive { LIST, element listentry { text }* }? &
    element KeepAliveTimeout { LIST, element listentry { text }* }? &
    element Krb5Keytab { LIST, element listentry { text }* }? &
    element LimitRequestBody { LIST, element listentry { text }* }? &
    element Listen { LIST, element listentry { text }* }? &
    element LogFilePerm { LIST, element listentry { text }* }? &
    element LogLevel { LIST, element listentry { text }* }? &
    element MaxClients { LIST, element listentry { text }* }? &
    element MaxClientsPerHost { LIST, element listentry { text }* }? &
    element MaxCopies { LIST, element listentry { text }* }? &
    element MaxJobs { LIST, element listentry { text }* }? &
    element MaxJobsPerPrinter { LIST, element listentry { text }* }? &
    element MaxJobsPerUser { LIST, element listentry { text }* }? &
    element MaxLogSize { LIST, element listentry { text }* }? &
    element MaxRequestSize { LIST, element listentry { text }* }? &
    element Order { LIST, element listentry { text }* }? &
    element PageLog { LIST, element listentry { text }* }? &
    element PassEnv { LIST, element listentry { text }* }? &
    element Port { LIST, element listentry { text }* }? &
    element PreserveJobFiles { LIST, element listentry { text }* }? &
    element PreserveJobHistory { LIST, element listentry { text }* }? &
    element Printcap { LIST, element listentry { text }* }? &
    element PrintcapFormat { LIST, element listentry { text }* }? &
    element PrintcapGUI { LIST, element listentry { text }* }? &
    element ReloadTimeout { LIST, element listentry { text }* }? &
    element RemoteRoot { LIST, element listentry { text }* }? &
    element RequestRoot { LIST, element listentry { text }* }? &
    element Require { LIST, element listentry { text }* }? &
    element RIPCache { LIST, element listentry { text }* }? &
    element Satisfy { LIST, element listentry { text }* }? &
    element ServerAdmin { LIST, element listentry { text }* }? &
    element ServerBin { LIST, element listentry { text }* }? &
    element ServerCertificate { LIST, element listentry { text }* }? &
    element ServerKey { LIST, element listentry { text }* }? &
    element ServerName { LIST, element listentry { text }* }? &
    element ServerRoot { LIST, element listentry { text }* }? &
    element ServerTokens { LIST, element listentry { text }* }? &
    element SetEnv { LIST, element listentry { text }* }? &
    element SSLListen { LIST, element listentry { text }* }? &
    element SSLPort { LIST, element listentry { text }* }? &
    element SystemGroup { LIST, element listentry { text }* }? &
    element TempDir { LIST, element listentry { text }* }? &
    element Timeout { LIST, element listentry { text }* }? &
    element User { LIST, element listentry { text }* }? &
    element sections {
      LIST,
      a_section*
    }?
  }

cups_remote_server =
  element cups_remote_server {
    element Encryption { LIST, element listentry { text }* }? &
    element ServerName { LIST, element listentry { text }* }?
  }
