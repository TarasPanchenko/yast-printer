/**
 * File:
 *  include/printer/helps-connection.ycp
 * Module:
 *  Printer configurator
 * Summary:
 *  Help texts.
 * Authors:
 *  Petr Blahos <pblahos@suse.cz>
 *  Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */
{
    textdomain "printer";
    import "Arch";

    /**
     * Help text for editParallelPort.
     * @return help text
     */
    define string textEditParallelPort () ``{
	return
	   // help text 1/2
	    _("<p><big><b>Parallel Port I/O:</b></big><br>If you have an uncommon parallel port 
card, it may not be possible to detect it automatically. In such cases,
you must specify its I/O addresses. Enter I/O addresses separated by commas 
for all parallel ports here, from the first to the last. For example, <tt>
0x378,0x2f8</tt>.<br>If your parallel port works, leave this field untouched.</p>")
	    +
	    // help text 2/2
	    _("<p>Changes will be saved immediately after you press OK.</p>");
    }
    /**
     * Help text for editSerialPort.
     * @return help text
     */
    define string textEditSerialPort () ``{
        return
	    // Help text 1/2
            _("<p><big><b>Baud rate:</b></big><br>You can specify the speed
used to communicate with your serial printer.</p>")
	    // help text 2/2
	    + _("<p><big><b>Other Settings:</b></big><br>
You can specify extra settings for your serial port. They may differ depending on your
spooler. Leave it empty for defaults. </p>");
    }
    /**
     * Label.
     * @param type parallel|serial|usb
     * @return help text
     */
    define string getAskDeviceLabel (string type) ``{
	map<string,string> labels = $[
		// Dialog label - parallel
		"parallel" : _("Parallel printer connection"),
		// Dialog label - serial
		"serial" :   _("Serial printer connection"),
		// Dialog label - USB
		"usb" :      _("USB printer connection"),
		// Dialog label - lpd
		"lpd" :      _("Forwarding queue to a remote LPD"),
		// Dialog label - samba
		"samba" :    _("Samba/Windows printer"),
		// Dialog label - novell
		"novell" :    _("Novell printer"),
                // Dialog label - ipp
                "ipp" :    _("IPP printer"),
                // Dialog label - socket
                "socket" :    _("Direct TCP port printer"),
		// Dialog label
	];
	return labels[type]:_("Connection");
    }

    /**
      * Help text.
      * @param add_queue true if add queue for existing printer is present
      * @return help text
      */
    define string getConnectionTypeHelp(boolean add_queue) ``{
        string help = "";
	if (! Arch::s390 ())
	{
	    // Help text 1/8, not present on S/390
	    help = _("<P><B><BIG>Parallel, USB, Serial, IrDA, or Bluetooth
Printer</BIG></B>
<BR>To configure a printer connected locally, select the
type of the local port to which your printer is connected.</p>");
	}
	// Help text 2/8
	help = help + _("<P><B><BIG>CUPS Network Server</BIG></B><BR>
To print via a CUPS network server, select
<B>Print via CUPS Network Server</B>.</P>");
	// Help text 3/8
	help = help + _("<P><B><BIG>LPD-Style Network Server</BIG></B><BR>
To print via an LPD-style network server, select
<B>Print via LPD-Style Network Server</B>.</P>");
	// Help text 4/8
	help = help + _("<P><B><BIG>SMB Network Server</BIG></B><BR>
To print via a Samba server or Windows, select
<B>Print via SMB Network Server</B>.</P>");
	// Help text 5/8
	help = help + _("<P><B><BIG>IPX Network Server</BIG></B><BR>
To print via a Novell Netware print server, select
<B>Print via IPX Network Server</B>.</P>");
	// Help text 6/8
	help = help + _("<P><B><BIG>Network Printer</BIG></B><BR>
To print directly to a network printer or using a print server box, select
<B>Print Directly to a Network Printer</B>.</P>");
	if (add_queue)
	{
	    // Help text 7/8, can be missing
	    help = help + _("<P><B><BIG>New Queue for an Existing Printer
</BIG></B><BR>
To configure a new queue for an already configured printer without
respecifying the printer location, manufacturer, and model name,
select <B>Create a New Queue for an Existing Printer</B>.</P>");
	}
	// Help text 8/8
	help = help + _("<P><B><BIG>Other Kind of Setup</BIG></B><BR>
To set another kind of queue, select <B>Other Kind of Setup</B>.</P>");
        return help;
    }


    /**
      * Help text.
      * @return help text
      */
   define string getLocalConnectionsHelp () ``{
        // Help text 1/1
        return _("<P><B><BIG>Parallel, USB, Serial, IrDA,
Bluetooth Printer:</BIG></B><BR>
Select the type of connection used for the printer.</P>");
    }

    /**
      * Help text.
      * @return help text
      */
    define string getCupsConnectionsHelp() ``{
	// Help text 1/3
	return _("<P><B><BIG>CUPS Client-Only</BIG></B><BR>
All queues of one CUPS server will be available to this computer.
Every new queue added to the server will be accessible on this computer.
You cannot add any local printers when using the client-only configuration,
because no local CUPS server is running.</P>")
	// Help text 2/3
	+ _("<P><B><BIG>CUPS Using Broadcasting</BIG></B><BR>
Configure a local CUPS server running and listening to broadcasts of all
CUPS servers in your network. All broadcasted queues will be accessible 
on this computer.</P>")
	// Help text 3/3
	+ _("<P><B><BIG>Remote IPP Queue</BIG></B><BR>
Only the specified queue of the specified remote CUPS server will be accessible
on this computer.</P>");
    }

    /**
      * Help text.
      * @return help text
      */
    define string getDirectConnectionsHelp() ``{
	// Help text 1/3
	return _("<P><B><BIG>Direct TCP Port Printing</BIG></B><BR>
Print jobs are sent directly to the TCP socket on the remote host.
Use this for most print server boxes and network printers.</P>")
	// Help text 2/3
	+ _("<P><B><BIG>Remote LPD Queue</BIG></B><BR>
Print jobs are sent to the print server via the LPD protocol.</P>")
	// Help text 3/3
	+ _("<P><B><BIG>Remote IPP Queue</BIG></B><BR>
Print jobs are sent to the print server via the IPP protocol.</P>");
    }

    /**
      * Help text.
      * @return help text
      */
    define string getOtherConnectionsHelp() ``{
	// Help text 1/3
	return _("<P><B><BIG>CUPS Class</BIG></B><BR>
You can group some printers into one class then print to the class. CUPS will divide print jobs between members of the class.</P>")
	// Help text 2/3
	+ _("<P><B><BIG>Pipe Printing</BIG></B><BR>
You can print to another program using pipe.</P>")
	// Help text 3/3
	+ _("<P><B><BIG>Other Printer</BIG></B><BR>
Set the URI of the printer.</P>");
    }

    /**
      * Help text.
      * @param type string parallel|usb|serial|irda
      * @return help text
      */
    define string getAskDeviceHelp (string type) ``{
	string help_text = "";
	if (type == "parallel")
	{
	    // Help text 1/5, parallel printer alternative
	    help_text = _("<P><B><BIG>Parallel Port:</BIG></B><BR>
If you have multiple parallel ports, choose the parallel port to
 which your printer is connected.</P>");
	}
	else if (type == "usb")
	{
	    // Help text 1/5, USB printer alternative
	    help_text = _("<P><B><BIG>USB Port:</BIG></B><BR>
Select the device for your USB printer.</P>
");
	}
	else if (type == "serial")
	{
	    // Help text 1/5, serial printer alternative
	    help_text = _("<P><B><BIG>Serial port:</BIG></B><BR>
Select the device for your serial printer.
 You can also set the baud rate.</P>");
	}
	else if (type == "irda")
	{
	    // Help text 1/5, IrDA printer alternative
	    help_text = _("<P><B><BIG>IrDA Port:</BIG></B><BR>
Select the device for your IrDA printer.</P>
");

	}
	else if (type == "bluetooth")
	{
	    // Help text 1/5, Bluetooth printer alternative
	    help_text = _("<p><b><big>Bluetooth Device</big></b><br>
Select your printer from the list of Bluetooth devices.</p>
");
	}

	// Help text 2/5
	help_text = help_text + _("<P><B><BIG>Other:</BIG></B><BR>
To enter another device, press <b>Other</b>.</P>");

	if (type != "bluetooth")
	{
	    help_text = help_text
	    // Help text 3/5
		+ _("<P><B><BIG>Testing Connection:</BIG></B><BR>
To be sure the printer is properly connected,
use <B>Test</B>.</P>
");
	}

	// help last part only for parallel or serial printers
	if (type == "parallel")
	{
	    // Help, text 4/5, paralel printer alternative
	    help_text = help_text + _("<P><B><BIG>Parallel Port Details:
</BIG></B><BR>If your
parallel port does not work, set its IO ports here.</P>
") +
	    // Help, text 5/5, paralel printer alternative
	    _("<p>Be careful when selecting a custom device or changing
IO port settings. Improper values may damage your system.</p>");
	}
	else if (type == "serial")
	{
	    // Help, text 4/5, serial printer alternative
	    help_text = help_text + _("<P><B><BIG>Serial Port Details:
</BIG></B><BR>Set advanced settings of the serial port here.</P>
") +
	    // Help, text 5/5, serial printer alternative
	    _("<p>Be careful when selecting a custom device or changing
serial port settings. Improper values may damage your system.</p>");
	}
	else if (type == "bluetooth")
	{
	    // Help text 4/5, bluetooth alt. (5/5 is missing for bluetooth)
	    help_text = help_text +_("<p><b><big>Detecting Devices</big></b><br>
To scan the vicinity of your computer for available Bluetooth devices,
click <b>Detect Devices</b>.</p>
");
	}

        return help_text;
    }


    /**
      * Help text.
      * @param type type of remote printer
      * @return help text
      */
    define string getAskRemoteHelp (string type) ``{
	string help_text = "";
	if ("samba" == type)
	{
	    // help text 1/5 (present only for samba queues)
	    help_text = help_text + _("<P><B><BIG>Workgroup:</BIG></B><BR>
Enter the name of your workgroup.</p>
");
	}

	// Help text 2/5
	help_text = help_text + _("<P><B><BIG>Host Name:</BIG></B><BR>
Enter the host name of your print server.</P>
");

	if ("socket" != type)
	{
	    // Help text 3/5, not present for direct socket printers
	    help_text = help_text + _("<P><B><BIG>Remote queue:</BIG></B><BR>Enter the name of the remote printer.</P>");
	}

	if ("samba" == type || "novell" == type)
	{
	    // Help text 4/5
	    help_text = help_text + _("<P><B><BIG>User, Password:</BIG></B><BR>
Enter the user name and password for accessing the print server.</P>
");
	}
	// Help, 5/5
	help_text = help_text + _("<P>To verify the name,
use <B>Test</B>.</P>");
        return help_text;
    }

    /**
      * Help text
      * @return string help text
      */
    define string getPipeHelp () ``{
	// Help text 1/1
	return _("<P><B><BIG>Program Name:</BIG></B><BR>
Name of the program to execute for each job. The program gets the
job at standard input.</P>
");
    }

    /**
      * Help text
      * @return string help text
      */
    define string getUriHelp () ``{
	// Help text 1/1
	return _("<P><B><BIG>URI:</BIG></B><BR>
Set the URI of the printer. This universal queue type for CUPS can be used if you have a new queue type supported by CUPS, but YaST2 support is missing
(for example, if you installed a new CUPS back-end).</P>");
    }



}
