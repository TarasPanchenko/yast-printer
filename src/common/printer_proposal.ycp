/**
 * File:
 *   clients/proposal_printer.ycp
 *
 * Package:
 *   Configuration of printer
 *
 * Summary:
 *   Proposal function dispatcher.
 *
 * Authors:
 *   Petr Blahos <pblahos@suse.cz>
 *
 * $Id$
 *
 * Proposal function dispatcher for printer configuration.
 */

{
    textdomain "printer";
    import "Printer";
    import "Printerlib";
    include "printer/misc.ycp";

    string func  = Args(0);
    map    param = Args(1);
    map    ret   = $[];

    integer spool_sys = Printerlib::getSpoolSystem ();

    if (spool_sys == 1)
	Printer::spooler = "lprng";
    else if (spool_sys == 2)
	Printer::spooler = "cups";
    if (func == "MakeProposal")
    {
	restartSpoolerIfNeeded (true);
	boolean force_reset = lookup (param, "force_reset", false);
	string proposal = "";
	string warning = nil;
	symbol warning_level = nil;
	if (1 == spool_sys || 2 == spool_sys)
	{
	    if (force_reset || !Printerlib::proposal_valid)
	    {
		Printerlib::proposal_valid = true;
		Printer::Reset ();
		Printer::Read ();
		Printer::Detect ();
		Printer::Propose ();
	    }
	    if (size (Printer::printcap) > 0)
	    {
		ret = $[
		    // warning message (part of richtext)
		    "warning" :_("<p><a href=\"printer_conf\">Test</a> your printer configuration before proceeding.</p>"),
		    "warning_level" : `notice,
		    ];
	    }
	    proposal = Printer::Summary ([]);
	}
	else
	{
	    ret = $[
		    // warning message (part of richtext)
		"warning" : _("The print spooler is not installed properly."),
		"warning_level" : `error,
	    ];
	}
	ret = add (ret, "preformatted_proposal", proposal);
    }
    else if (func == "AskUser")
    {
	any saved = nil;
	any seq = nil;
	if (1 == spool_sys || 2 == spool_sys)
	{
	    saved = Printer::Export ();
	    seq = CallFunction (`printer (.nocheck, .noio));
	    if (`next != seq)
		Printer::Import (saved);
	}
	ret = $[ "workflow_sequence" : seq, ];
    }
    else if (func == "Description")
    {
	// richtext label
	ret = $[ "rich_text_title" :	_("Printers"),
		// menu title
		 "menu_title" :		_("&Printers"),
		 "id" :			"printer_conf",
		 ];
    }
    else if (func == "Write")
    {
	/**
	 * This is rather evil but should work for this case.
	 * As proposal is called only on the fresh installation
	 * with nothing configured, we may just check if the list
	 * of printers is empty (there is nothing to save).
	 */
	boolean success = true;
	if (1 == spool_sys || 2 == spool_sys)
	{
	    if (0 != size (Printer::printcap))
	    success = Printer::Write ();
	}
        ret = $[ "success" : success ];
    }
    return ret;
}
