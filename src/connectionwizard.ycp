/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:        include/printer/connectionwizard.ycp
 * Package:     Configuration of printer
 * Summary:     Connection wizard dialog definition
 * Authors:     Johannes Meixner <jsmeix@suse.de>
 *
 * $Id: connectionwizard.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "printer";

import "Label";
import "Wizard";
import "Printer";
import "Popup";

include "printer/helps.ycp";

/**
 * ConnectionWizardDialog dialog
 * @return dialog result
 */
any ConnectionWizardDialog()
{ string caption = _("Connection Wizard");
  string uri = "";
  string model = "";
  y2milestone( "Printer::connections: %1", Printer::connections );
  // If the user has selected a connection which was created by the connection wizard,
  // then show its values in the TextEntry fields to the user,
  // otherwise fall back to the first one in Printer::connections because
  // the first one in Printer::connections is what the user had entered last
  // in the connection wizard (if he had entered something in the connection wizard)
  // because a new connection is prepended to the Printer::connections list.
  // In any case test if the connection was created by the connection wizard and
  // if yes, show its values in the TextEntry fields to the user:
  integer connection_index = Printer::selected_connections_index;
  if( connection_index < 0 )
  { connection_index = 0;
  }
  if( "ConnectionWizardDialog" == Printer::connections[connection_index,"class"]:"" )
  { uri = Printer::connections[connection_index,"uri"]:"";
    model = Printer::connections[connection_index,"model"]:"";
  }
  term contents = `VBox( `TextEntry( `id(`device_uri_input),
                                     // Header of a TextEntry to enter the Connection/DeviceURI:
                                     _("Provide a valid &connection (printer device URI)"),
                                     uri
                                   ),
                         `TextEntry( `id(`model_name_input),
                                     // Header of a TextEntry to enter a printer model name:
                                     _("Manufacturer and/or &model name (optionally to find a matching driver)"),
                                     model
                                   )
                       );
  Wizard::SetContentsButtons( caption,
                              contents,
                              HELPS["connection_wizard_dialog"]:"",
                              Label::BackButton(),
                              // Set a different label for the "next" button
                              // (i.e. the lower right button which results `next as UI::UserInput):
                              Label::OKButton()
                            );
  // Show a user information because the current implementation provides
  // only very primitive functionality compared to what is should provide
  // according to http://en.opensuse.org/YaST/Development/Printer_Enhancement
  Popup::AnyMessage( // Header of a Popup::AnyMessage because of a work-in-progress dialog:
                     _("Under Connstruction"),
                     // Body of a Popup::AnyMessage because of a work-in-progress dialog:
                     _("Currently this is is only a very basic 'placeholder'\nto have some dialog at all for the workflow.\nSee https://bugzilla.novell.com/show_bug.cgi?id=421192")
                   );
  any ret = nil;
  while(true)
  { ret = UI::UserInput();
    if( ret == `abort || ret == `cancel || ret == `back ) break;
    if( ret == `next )
    { string device_uri = (string)UI::QueryWidget( `id(`device_uri_input), `Value);
      if( "" == device_uri )
      { Popup::AnyMessage( // Header of a Popup::AnyMessage when no Connection/DeviceURI was entered:
                           _("No Connection"),
                           // Body of a Popup::AnyMessage when no Connection/DeviceURI was entered:
                           _("Enter a valid connection (printer device URI).")
                         );
        continue;
      }
      string model_name = (string)UI::QueryWidget( `id(`model_name_input), `Value);
      if( device_uri != uri
          || model_name != model
        )
      { if( uri == device_uri )
        { // Because an empty device_uri string is not accepted, uri must be also non-empty which means
          // that it is an already existing connection which was created by the connection wizard
          // and then it is the first entry in the Printer::connections list because
          // a non-empty uri is from the first entry in the Printer::connections list
          // so that only the model name was changed:
          Printer::connections[0,"model"] = model_name;
        }
        else
        { // When the URI has changed, the new device_uri could already exist in Printer::connections
          // but then it is not the first entry in the Printer::connections because
          // the uri string is from the first entry in the Printer::connections list.
          // To replace the existing entry, it is removed from Printer::connections
          // and the new one is prepended to Printer::connections.
          // This way this new entry is shown when the user runs the connection wizard again.
          // Note that this remove-and-prepend procedure makes sure that there can be
          // at most one entry with same uri which is created by the connection wizard but
          // there can be entries with same uri which are not created by the connection wizard:
          connection_index = -1;
          foreach( map< string, string > connection_entry,
                   Printer::connections,
                   { // Set the connection_index to the index number of the current connection_entry:
                     connection_index = connection_index + 1;
                     // Make sure not to remove entries in Printer::connections with same uri
                     // but which are not created by the connection wizard:
                     if( device_uri == connection_entry["uri"]:""
                         && "ConnectionWizardDialog" == connection_entry["class"]:""
                       )
                     { Printer::connections = remove( Printer::connections, connection_index );
                       // Now the Printer::connections list was changed so that
                       // it is safer not to do any further processing of this list.
                       // Additionally invalidate Printer::selected_connections_index to be safe:
                       Printer::selected_connections_index = -1;
                       break;
                     }
                   }
                 );
          // The exact class string "ConnectionWizardDialog" is used in Printer::ConnectionItems
          // to show also the connections which are created by the connection wizard to the user
          // even if the connection_filter_string is "BasicAddDialog" or "MoreConnections".
          // The exact info string "created by the connection wizard" is used in Printer::ConnectionItems
          // to have the entries which are "created by the connection wizard" topmost
          // in the list of connections which is shown to the user:
          Printer::connections = prepend( Printer::connections,
                                          $[ "uri":device_uri,
                                             "model":model_name,
                                             "deviceID":"",
                                             "info":"created by the connection wizard",
                                             "class":"ConnectionWizardDialog"
                                           ]
                                        );
          // Invalidate Printer::selected_connections_index because Printer::connections has changed:
          Printer::selected_connections_index = -1;
        }
      }
      // Exit this dialog in any case:
      break;
    }
    y2milestone( "Ignoring unexpected returncode in DriverOptionsDialog: %1", ret );
    continue;
  }
  return ret;
}

/* EOF */
}
