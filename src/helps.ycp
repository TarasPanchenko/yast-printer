/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:        include/printer/helps.ycp
 * Package:     Configuration of printer
 * Summary:     Help texts of all the dialogs
 * Authors:     Johannes Meixner <jsmeix@suse.de>
 *
 * $Id: helps.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "printer";

/**
 * All helps are here
 */
map HELPS =
$[

"read" :
// Read dialog help 1/1:
_("<p>
<b><big>Initializing printer Configuration</big></b><br>
Please wait...<br>
</p>"),

"write" :
// Write dialog help 1/1:
_("<p>
<b><big>Finishing printer Configuration</big></b><br>
Please wait...<br>
</p>"),

"overview" :
// Overview dialog help 1/7:
_("<p>
<b><big>Print Queue Overview</big></b><br>
A printer device is not used directly but via a print queue.<br>
When various application programs submit print jobs simultaneously,
these jobs are put in a queue and are sent one after the other to the printer
device.<br>
It is possible to have several different print queues for the same printer
device.
For example a second queue with a monochrome-only driver for a color device
or a PostScript queue and a queue with a PCL driver for a PostScript+PCL
printer or a queue to print on one side only of a sheet of paper and one for two sided
printing.
</p>") +
// Overview dialog help 2/7:
_("<p>
<b><big>Using Remote Queues:</big></b><br>
Remote queues exist on other hosts in the network
and therefore they cannot be changed on this host.<br>
The remote queues which are listed here are known on this host
and usually they can be used directly by application programs
so that there is no need to set up a local queue for a printer
which is already available via a remote queue.<br>
</p>") +
// Overview dialog help 3/7:
_("<p>
<b><big>Configure a printer:</big></b><br>
Press <b>Add</b> to set up a new queue for a printer device.
</p>") +
// Overview dialog help 4/7:
_("<p>
<b><big>Change the settings for a queue:</big></b><br>
Select a local queue and press <b>Edit</b>.
</p>") +
// Overview dialog help 5/7:
_("<p>
<b><big>Remove a queue:</big></b><br>
Select a local queue and press <b>Delete</b>.
</p>") +
// Overview dialog help 6/7:
_("<p>
<b><big>Print a test page:</big></b><br>
Select the queue and press <b>Print Test Page</b>.
</p>") +
// Overview dialog help 7/7:
_("<p>
<b><big>Refresh the list of queues:</big></b><br>
In particular after changes regarding printing via network
the available remote queues may have changed.
Usually it takes some time (up to several minutes)
until such changes become known to the local host
so that it is useful to press <b>Refresh List</b>
after some time to get an up-to-date list
of available remote queues.
</p>"),

"basic_add_dialog" :
// BasicAddDialog help 1/5:
_("<p>
<b><big>Set Up a New Queue for a Printer Device</big></b><br>
A printer device is not used directly but via a print queue.<br>
When various application programs submit print jobs simultaneously,
the jobs queue up and are sent one after the other to the printer device.<br>
It is possible to have several different print queues for the same printer device.
Usually several print queues are needed when several different printer drivers
should be used for the same printer device.
For example a second queue with a monochrome-only driver
to enforce black-only printout on a color device
or a PostScript queue and a queue with a PCL driver for a PostScript+PCL printer
because printing via the PCL driver is usally faster (but with less quality).
</p>") +
// BasicAddDialog help 2/5:
_("<p>
To set up a new queue:<br>
Select the connection of the matching printer device,<br>
find and assign a suitable printer driver, and<br>
set a unique queue name.
</p>") +
// BasicAddDialog help 3/5:
_("<p>
The <b>connection</b> determines which way data is sent to the printer device.<br>
If a wrong connection is selected, no data can be sent to the device
so that there cannot be any printout.<br>
If a printer device is accessible via more than one connection type,
it is shown for each connection type.<br>
In particular HP devices are often accessible both via the 'usb:/...'
and the 'hp:/...' connection.
The latter is provided by the HP driver package 'hplip'.
For plain printing both kind of connections should work but for anything else
(e.g. device status via 'hp-toolbox', or scanning with a HP all-in-one device)
the 'hp:/...' connection must be used.
</p>") +
// BasicAddDialog help 4/5:
_("<p>
The <b>driver</b> determines that the right data is produced for the
specific printer model.<br>
If a wrong driver is assigned, wrong data is sent to the printer
which results bad looking printout, chaotic printout, or no printout at all.
</p>") +
// BasicAddDialog help 5/5:
_("<p>
Application programs do not show the actual printer device
but its associated <b>queue name</b>.<br>
Only letters (a-z and A-Z), numbers (0-9), and the underscore '_'
are allowed for the queue name and it must start with a letter.
</p>"),

"basic_modify_dialog" :
// BasicModifyDialog help 1/4:
_("<p>
<b><big>Modify a Print Queue</big></b><br>
To modify a queue, select only what you really want to be changed.<br>
</p>") +
// BasicModifyDialog help 2/4:
_("<p>
The <b>connection</b> determines which way data is sent to the printer device.<br>
If a wrong connection is selected, no data can be sent to the device
so that there cannot be any printout.<br>
If a printer device is accessible via more than one connection type,
it is shown for each connection type.<br>
In particular HP devices are often accessible both via the 'usb:/...'
and the 'hp:/...' connection.
The latter is provided by the HP driver package 'hplip'.
For plain printing both kind of connections should work but for anything else
(e.g. device status via 'hp-toolbox', or scanning with a HP all-in-one device)
the 'hp:/...' connection must be used.
</p>") +
// BasicModifyDialog help 3/4:
_("<p>
The <b>driver</b> determines that the right data is produced for the
specific printer model.<br>
If a wrong driver is assigned, wrong data is sent to the printer
which results bad looking printout, chaotic printout, or no printout at all.<br>
You can either select another driver and modify its driver option settings later
or keep the currently used driver and modify its driver option settings now.<br>
Some driver option settings must match to your particular printer.
For example the default paper size setting of the driver
must match to the paper which is actually loaded in your printer.<br>
For other driver option settings you can choose what you like.
For example any choice of the available printing resolutions
should work for the particular driver.
Nevertheless it may happen that your particular printer fails to print
with high resolution. For example when you have a laser printer
which has insufficient built-in memory to process high resolution pages.
</p>") +
// BasicModifyDialog help 4/4:
_("<p>
In contrast to connection and driver where you must select the right one,
you are free to enter arbitrary strings for <b>description</b> and <b>location</b>.
Application programs often show description and location in the print dialog.
To make sure that those strings look correct in any language
which a particular user of a particular application program may use,
it is safe when you use only plain ASCII text without
special characters e.g. only ASCII letters (a-z and A-Z),
ASCII numbers (0-9), and the ASCII space character (20 hex).
Usually the description describes the model and optionally the driver
(e.g. 'ACME FunPrinter 1000 using generic PCL driver')
and the location describes where the printer is located
(e.g. 'Room 123' or 'Front Desk').
</p>"),

"driver_options_dialog" :
// DriverOptionsDialog help 1/3:
_("<p>
<b><big>Set Driver Options</big></b><br>
Usually it is best to leave the driver defaults because
the defaults should be reasonable for usual printing.<br>
Additionally the print dialogs in usual application programs
show the driver options too so that each user can specify
driver options for each individual printout.<br>
The only setting which should be checked in any case is the paper size
which must be set to what is actually used by default in the printer.
</p>") +
// DriverOptionsDialog help 2/3:
_("<p>
Non-default settings may not work in any case or have unexpected consequences.<br>
For example a high resolution setting may not work for a laser printer
when its default built-in memory is insufficient to process high resolution pages.<br>
Or a high quality setting may print intolerable slow on an inkjet printer.
</p>") +
// DriverOptionsDialog help 3/3:
_("<p>
On the other hand in certain cases printer-specific driver settings
must be adjusted to get the full functionality of a printer.<br>
In particular when the printer has optional units installed like
duplex unit or optional paper feeders, the matching driver settings
should be checked and adjusted.<br>
For example a duplex unit option must be set to 'installed' or 'true'
otherwise the driver may ignore duplex printing option settings.
</p>"),

"add_driver_dialog" :
// AddDriverDialog help 1/2:
_("<p>
<b><big>Add or Remove Printer Driver Packages</big></b><br>
When a printer driver package is not marked, it is not installed
and then you can select it so that it will be installed.<br>
When a printer driver package is marked, it is installed
and then you can un-select it so that it will be removed.
In the latter case it is up to you to make sure
that there is no printer configuration which needs the driver.<br>
</p>") +
// AddDriverDialog help 2/2:
_("<p>
<b><big>Add a Printer Description File</big></b><br>
To set up a printer configuration a printer description file
(PPD file) is required.<br>
When a PPD file is not located in the /usr/share/cups/model/ directory,
it is not available to set up a printer configuration with it.
Therefore you can specify the full path of a PPD file
which is located elsewhere on your system to get it installed
in the /usr/share/cups/model/ directory.<br>
Note that a printer description file is not a driver.<br>
For non-PostScript printers the PPD file alone is
not sufficient to set up a working printer configuration.
In particular it does not work for non-PostScript printers
to download a PPD file from the Internet and then set up
the printer with such a PPD file.
The plain printer setup would work but actual printing
would not work because the driver is missing.
For non-PostScript printers you need a printer driver
and a PPD file which matches exactly to the particular driver.
Matching PPD files are automatically installed at the right place
when you install the above mentioned printer driver packages.<br>
Only for PostScript printers, a PPD file alone is usually
sufficient to set up a working PostScript printer configuration.
In particular it is sufficient when the PPD file does not
contain a 'cupsFilter' entry because such an entry would
reference a printer driver.<br>
</p>"),

"connection_wizard_dialog" :
// ConnectionWizardDialog help 1/6:
_("<p>
<b><big>Specify the Connection</big></b><br>
The <b>connection</b> determines which way data is sent to the printer device.<br>
If a wrong connection is used, no data can be sent to the device
so that there cannot be any printout.
</p>") +
// ConnectionWizardDialog help 2/6:
_("<p>
<b><big>Printer Device URI</big></b><br>
A connection is specified as so called <b>device URI</b>.<br>
Its first word (the so called URI scheme) specifies the kind of data-transfer,
for example 'parallel', 'usb', 'socket', 'lpd', or 'ipp'.<br>
After the scheme there are more or less additional parts
(separated by slash '/' characters) which specify the details
for this kind of data-transfer.<br>
Finally there could be optional parameters (separated by a question mark '?')
of the form option1=value1&option2=value2&option3=value3 so that
a full device URI could be for example:<br>
ipp://server.domain:631/printers/queuename?waitjob=false&waitprinter=false<br>
Special characters must be percent-encoded (also known as URL encoding).
For example a space character ' ' must be written as '%20'
and a plus sign '+' must be written as '%2B'.<br>
Some examples:<br>
A USB printer model 'Fun Printer 1000+' made by 'ACME'
with serial number 'A1B2C3' may have a device URI like:<br>
usb://ACME/Fun%20Printer%201000%2B?serial=A1B2C3<br>
A network printer with IP 192.168.100.1 which is accessible
via port 9100 may have a device URI like:<br>
socket://192.168.100.1:9100<br>
A network printer with IP 192.168.100.2 which is accessible
via LPD protocol with a remote LPD queue name 'lpt1'
may have a device URI like:<br>
lpd://192.168.100.2/lpt1
</p>") +
// ConnectionWizardDialog help 3/6:
_("<p>
<b><big>Device URIs for Directly Connected Devices</big></b><br>
Devices which are connected via the parallel port or via USB
are autodetected and the appropriate device URI is autogenerated.
For example:<br>
parallel:/dev/lp0<br>
usb://ACME/FunPrinter<br>
hp:/usb/HP_LaserJet?serial=1234<br>
Usually only the autogenerated device URIs work.
When the device is not autodetected, there is usually no communication
with the device possible and no data can be sent to the device.
</p>") +
// ConnectionWizardDialog help 4/6:
_("<p>
<b><big>Device URIs to Access a Network Printer or a Printserver Box</big></b><br>
A printserver box is a small device with a network connection
and a USB or parallel port connection to connect the actual printer.
A network printer has such kind of device built-in.
Access happens via three different network protocols.
See the manual of your network printer or printserver box
what your particular device supports:<br>
<b>TCP Port (AppSocket/JetDirect)</b><br>
The IP address and a port number is needed to access it.
Often the port number 9100 is the right one.
It is the simplest, fastest, and generally the most reliable protocol.
The matching device URI is:<br>
socket://ip-address:port-number<br>
<b>Line Printer Daemon (LPD) Protocol</b><br>
A LPD runs on the device and provides one or more LPD queues.
The IP address and a LPD queue name is needed to access it.
Almost all network printers and printserver boxes support it.
Often an arbitrary queue name or 'LPT1' works somehow.
But using a correct LPD queue which does not somehow change
the data or add additional formfeeds or banner pages
could be essential for reliable printing.
The matching device URI is:<br>
lpd://ip-address/queue<br>
<b>Internet Printing Protocol (IPP)</b><br>
IPP is the native protocol for CUPS which runs on a real computer
but when IPP is implemented in a small printserver box,
it is often not implemented properly. Only use IPP when the vendor
actually documents official support for it. 
The matching device URI is:<br>
ipp://ip-address:port-number/resource<br>
What 'port-number' and 'resource' exactly is depends totally
on the particular network printer or printserver box model.<br>
For <b>more information</b> have a look at<br>
http://www.cups.org/documentation.php/network.html
</p>") +
// ConnectionWizardDialog help 5/6:
_("<p>
<b><big>Device URIs to Print Via a Print Server Machine</big></b><br>
In contrast to a printserver box a print server machine
means a real computer which offers a print service.<br>
Access happens via various different network protocols.
Ask your network administrator what which print server machine
provides in your particular network:<br>
<b>Microsoft Windows/SAMBA (SMB/CIFS)</b><br>
A server name and a printer share name and optionally a workgroup name
is needed to access it.
Furthermore a user name and a password may be required to get access.
A matching full device URI is:<br>
smb://username:password@workgroup/server/printer<br>
For <b>more information</b> have a look at <tt>man smbspool</tt> and<br>
http://en.opensuse.org/SDB:Printing_via_SMB_(Samba)_Share_or_Windows_Share<br>
<b>Traditional UNIX Server (LPR)</b><br>
A Line Printer Daemon (LPD) runs on a traditional UNIX server
and provides one or more LPD queues.
The IP address and a LPD queue name is needed to access it.
The matching device URI is:<br>
lpd://ip-address/queue<br>
<b>CUPS Server</b><br>
Usually you should not set up a local print queue to access
a remote queue on a CUPS server. Instead do the setup
in the <b>Print Via Network</b> dialog.
Only if you really know that you must set up a local print queue
to access a remote queue on a CUPS server proceed here.<br>
IPP is the native protocol for CUPS which runs on a server.
The official IANA port for IPP is 631.
The matching device URI is:<br>
ipp://ip-address:631/printers/queue<br>
<b>Novell Netware Print Server (IPX)</b><br>
To access print queues on a Novell Netware print server,
the RPM package ncpfs must be installed.
The package provides the CUPS backend 'novell' which runs
the <tt>nprint</tt> program which actually sends the data
to a Novell Netware print queue.
A server name and a printer queue name is needed to access it.
Furthermore a user name and a password may be required to get access.
The matching device URI is:<br>
novell://username:password@server/queue<br>
For <b>more information</b> have a look at <tt>man nprint</tt> and
the other documentation in the RPM package ncpfs.
</p>") +
// ConnectionWizardDialog help 6/6:
_("<p>
<b><big>Special Device URIs</big></b><br>
<b>Specify an Arbitrary Device URI</b>
if you know the exact right device URI for your particular case
or to modify an existing device URI in a special way.<br>
<b>Send Print Data to Other Program (pipe)</b><br>
To do this, the RPM package cups-backends must be installed.
The package provides the CUPS backend 'pipe' which runs
the program that you specified here.
The matching device URI is:<br>
pipe:/path/to/targetcommand<br>
<b>Daisy-chain Backend Error Handler (beh)</b><br>
To do this, the RPM package cups-backends must be installed.
The package provides the CUPS backend 'beh'.<br>
The backend 'beh' is a wrapper for the usual backend,
which is then called by beh.
This way beh can, depending on its configuration,
repeat the call of the backend or simply hide the error status
of the backend from being seen by the CUPS daemon.
The matching device URI is:<br>
beh:/nodisable/attempts/delay/originalDeviceURI<br>
If nodisable is '1' beh always exits successfully
so that the queue gets never disabled but on the other hand
print jobs are lost if there is an error.<br>
Attempts is the number of attempts to recall the backend
in case of an error. '0' means infinite retries.<br>
Delay is the number of seconds between two attempts
to call the backend.<br>
The last parameter is the original URI, which the queue had before.<br>
Example:<br>
beh:/1/3/5/socket://ip-address:port-number<br>
The beh backend tries to access a network printer 3 times with 5 second delay
between the attempts. If access still fails, the queue is not disabled
and the print job is lost.<br>
For <b>more information</b> have a look at <tt>/usr/lib[64]/cups/backend/beh</tt> and<br>
http://www.linuxfoundation.org/en/OpenPrinting/Database/BackendErrorHandler<br>
</p>"),

"printing_via_network_dialog" :
// PrintingViaNetworkDialog help 1/3:
_("<p>
<b><big>Printing Via Network</big></b><br>
Usually CUPS (Common Unix Printing System) is used to print via network.<br>
By default CUPS uses its so called 'Browsing' mode
to make printers available via network.<br>
In this case remote CUPS servers must publish their printers via network
and accordingly on your host the CUPS daemon process (cupsd) must run
which is listening for incomming information about published printers.<br>
CUPS Browsing information is recieved via UDP port 631.<br>
Regarding firewall:<br>
Check if a firewall is active for a network zone
in which printers are published via network.
By default the SuSEfirewall allows any incomming information
via a network interface which belongs to the 'internal zone'
because this zone is trusted by default.
If the remote CUPS servers and your system are in an internal network
and when you trust all what there is in your internal network,
your network interface must be set to be in the 'internal zone'.
It does not make sense to have a network setup in a trusted internal network
with a network interface which belongs to the untrusted 'external zone'
which is the default setting for network interfaces to be safe.
Do not disable firewall protection for CUPS
(i.e. for IPP which uses TCP port 631 and UDP port 631)
for the untrusted 'external zone'.
</p>") +
// PrintingViaNetworkDialog help 2/3:
_("<p>
If you print only via network and if you use only one single CUPS server,
there is no need to use CUPS Browsing and have a CUPS daemon running on your host.
Instead it is simpler to specify the CUPS server and access it directly.
</p>") +
// PrintingViaNetworkDialog help 3/3:
_("<p>
If there is no CUPS server in your network or if you must additionally use
another kind of print server (e.g. print via a Windows/SMB server
or print via a traditional Unix LPR server) or if you must access
a network printer directly, you have to set up an appropriate print queue
on your host.
</p>"),

"sharing_dialog" :
// SharingDialog help 1/3:
_("<p>
<b><big>Sharing Print Queues and Publish Them Via Network</big></b><br>
Usually CUPS (Common Unix Printing System) should be set up to use
its so called 'Browsing' mode to make printers available via network.<br>
In this case CUPS servers publish their local print queues via network
and accordingly on CUPS client systems the CUPS daemon process (cupsd) must run
which is listening for incomming information about published printers.<br>
CUPS Browsing information is recieved via UDP port 631.
</p>") +
// SharingDialog help 2/3:
_("<p>
First of all CUPS client systems must be allowed to access the CUPS server.
Then specify whether or not printers should be published to the clients.
It is not required to publish printers in any case.
If you have only one single CUPS server, there is no need to use CUPS Browsing.
Instead it is simpler to specify the CUPS server on the client systems
(via 'Printing Via Network') so that the clients access the server directly.
</p>") +
// SharingDialog help 3/3:
_("<p>
Regarding firewall:<br>
Check if a firewall is active for a network zone in which printers
are made available via network to be used by trusted users
(nobody lets arbitrary users print on his printer).
By default the SuSEfirewall allows any access via a network interface
which belongs to the 'internal zone' because this zone is trusted by default.
If the CUPS server and the client systems are in an internal network
and when you trust all what there is in your internal network,
your network interface must be set to be in the 'internal zone'.
It does not make sense to have a network setup in a trusted internal network
with a network interface which belongs to the untrusted 'external zone'
which is the default setting for network interfaces to be safe.
Do not disable firewall protection for CUPS
(i.e. for IPP which uses TCP port 631 and UDP port 631)
for the untrusted 'external zone'.
</p>"),

"policies" :
// Policies help 1/2:
_("<p>
<b><big>CUPS Operation Policy</big></b><br>
Operation policies are the rules used for each operation in CUPS.
Such operations are for example 'print something', 'cancel a printout',
'configure a printer', 'modify or remove a printer configuration',
and 'enable or disable printing'.
</p>") +
// Policies help 2/2:
_("<p>
<b><big>CUPS Error Policy</big></b><br>
The error policy defines the default policy that is used when
CUPS fails to send a print job to the printer device.<br>
Depending on the particular way how the printer is connected
(for example 'parallel', 'usb', 'socket', 'lpd', or 'ipp'),
and depending on the actual kind of failure,
the CUPS backend which actually sends the data to the printer
can overwrite the default error policy
and enforce another error policy (see <tt>man backend</tt>).
For example it can stop any further printing attempt
even when the default error policy is to retry the job.
This could happen when any attempt to establish
the communication with the printer is useless
so that it does no make sense to retry the job.
<br>
The following error policies exist:<br>
Stop the printer and keep the job for future printing.<br>
Re-send the job from the beginning after waiting some time (30 seconds by default).<br>
Abort and delete the job and proceed with the next job.
</p>"),

"autoconfig" :
// Autoconfig help 1/1:
_("<p>
<b><big>CUPS Autoconfiguration for USB Printers</big></b><br>
When a USB printer is connected to the system
cups-autoconfig determines if the printer is already configured.
If it is already configured, printing is enabled.
If the printer is not configured, cups-autoconfig attempts
to select an appropriate driver for it and, if successful,
cups-autoconfig configures it.
When a USB printer is removed, cups-autoconfig can disable printing.
</p>")

];

/* EOF */
}
