/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:        include/printer/dialogs.ycp
 * Package:     Configuration of printer
 * Summary:     Autoconfig settings dialog definition
 * Authors:     Johannes Meixner <jsmeix@suse.de>
 *
 * $Id: autoconfig.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "printer";

import "Printerlib";
import "Popup";
import "Wizard";

include "printer/helps.ycp";

term widgetAutoconfig = `VBox
                        ( // Have space between the top of the dialog and the content:
                          `VStretch(),
                          `Left
                          ( `Label
                            ( `id("autoconfig_label"),
                              // Header for a dialog section where the user can
                              // specify if USB printers are configured automatically:
                              _("Specify if USB printers are configured automatically")
                            )
                          ),
                          `Left
                          ( `CheckBox
                            ( // CheckBox to install or remove udev-configure-printer.
                              // Since openSUSE 11.2 cups-autoconfig is no longer available,
                              // see https://bugzilla.novell.com/show_bug.cgi?id=526657
                              `id("udev_configure_printer_check_box"),
                              `opt(`notify),
                              // CheckBox for automatic configuration of USB printers
                              // by installing or removing the RPM package udev-configure-printer.
                              // Do not change or translate "udev-configure-printer", it is a RPM package name.
                              _("Use the package udev-configure-printer for automated USB printer configuration")
                            )
                          ),
                          // Have space between the content and the bottom of the dialog:
                          `VStretch()
                        );

void initAutoconfig( string key )
{ y2milestone( "entering initAutoconfig with key '%1'", key );
  boolean autoconfig_settings_dialog_is_useless = false;
  // The whole Autoconfig Settings dialog is useless if it is a "client-only" config.
  // Determine whether or not it is currently a real client-only config
  // (i.e. a ServerName != "localhost/127.0.0.1" in /etc/cups/client.conf)
  // and ignore when it fails (i.e. use the fallback value silently):
  Printerlib::DetermineClientOnly();
  if( Printerlib::client_only )
  { if( ! Popup::YesNoHeadline( sformat( // PopupYesNoHeadline headline
                                         // where %1 will be replaced by the server name:
                                         _("Disable remote CUPS server '%1'"),
                                         Printerlib::client_conf_server_name
                                       ),
                                // PopupYesNoHeadline body:
                                _("A remote CUPS server setting conflicts with automatic configuration of printers for the local system.")
                              )
      )
    { autoconfig_settings_dialog_is_useless = true;
      y2milestone( "autoconfig_settings_dialog_is_useless because user decided not to disable client-only CUPS server '%1'",
                   Printerlib::client_conf_server_name
                 );
    }
    else
    { // Remove the 'ServerName' entry in /etc/cups/client.conf:
      if( ! Printerlib::ExecuteBashCommand( Printerlib::yast_bin_dir + "cups_client_only none" ) )
      { Popup::ErrorDetails( // Popup::ErrorDetails message:
                             _("Failed to remove the 'ServerName' entry in /etc/cups/client.conf"),
                             Printerlib::result["stderr"]:"" + "\n" + Printerlib::result["stdout"]:""
                           );
        autoconfig_settings_dialog_is_useless = true;
        y2milestone( "autoconfig_settings_dialog_is_useless because it failed to disable client-only CUPS server '%1'",
                     Printerlib::client_conf_server_name
                   );
      }
    }
  }
  // When it is no "client-only" config,
  // determine whether or not a local cupsd is accessible:
  if( ! autoconfig_settings_dialog_is_useless )
  { if( ! Printerlib::GetAndSetCupsdStatus( "" ) )
    { // Printerlib::GetAndSetCupsdStatus already shows a confirmation popup:
      if( ! Printerlib::GetAndSetCupsdStatus( "start" ) )
      { autoconfig_settings_dialog_is_useless = true;
        y2milestone( "autoconfig_settings_dialog_is_useless because 'rccups start' failed." );
      }
    }
  }
  // Determine if udev-configure-printer is installed.
  boolean udev_configure_printer_installed = Printerlib::TestAndInstallPackage( "udev-configure-printer", "installed" );
  // Avoid a flickering change of the udev_configure_printer_check_box value
  // by explicite if...else statements which do only one single UI::ChangeWidget
  // instead of a blind default setting which is changed afterwards:
  if( udev_configure_printer_installed )
  { UI::ChangeWidget( `id("udev_configure_printer_check_box"), `Value, true );
  }
  else
  { UI::ChangeWidget( `id("udev_configure_printer_check_box"), `Value, false );
  }
  // Disable all widgets in the whole dialog if autoconfig_settings_dialog_is_useless:
  if( autoconfig_settings_dialog_is_useless )
  { UI::ChangeWidget( `id("autoconfig_label"), `Enabled, false );
    UI::ChangeWidget( `id("udev_configure_printer_check_box"), `Enabled, false );
  }
  y2milestone( "leaving initAutoconfig with udev_configure_printer_installed = '%1'", udev_configure_printer_installed );
}

boolean ApplyAutoconfigSettings()
{ // string package_name = "udev-configure-printer";
  string package_name = "cups-autoconfig";
  if( (boolean)UI::QueryWidget( `id("udev_configure_printer_check_box"), `Value ) )
  { // udev-configure-printer should be installed if it is not yet installed:
    if( ! Printerlib::TestAndInstallPackage( package_name, "installed" ) )
    { Printerlib::TestAndInstallPackage( package_name, "install" );
      // There is no "abort" functionality which does a sudden death of the whole module (see dialogs.ycp).
      // Unfortunately when the YaST package installer is run via Printerlib::TestAndInstallPackage
      // it leaves a misused "abort" button labeled "Skip Autorefresh" with WidgetID "`abort"
      // so that this leftover "abort" button must be explicitely hidden here:
      Wizard::HideAbortButton();
    }
    if( ! Printerlib::TestAndInstallPackage( package_name, "installed" ) )
    { // Set the actually correct value for the udev_configure_printer_check_box
      UI::ChangeWidget( `id("udev_configure_printer_check_box"), `Value, false );
      Popup::Error( // Popup::Error message when the RPM package udev-configure-printer could not be installed:
                    _("Failed to install udev-configure-printer.")
                  );
      y2milestone( "ApplyAutoconfigSettings failed to install '%1'", package_name );
      return false;
    }
  }
  else
  { // udev-configure-printer should be removed if it is installed:
    if( Printerlib::TestAndInstallPackage( package_name, "installed" ) )
    { Printerlib::TestAndInstallPackage( package_name, "remove" );
    }
    if( Printerlib::TestAndInstallPackage( package_name, "installed" ) )
    { // Set the actually correct value for the udev_configure_printer_check_box
      UI::ChangeWidget( `id("udev_configure_printer_check_box"), `Value, true );
      Popup::Error( // Popup::Error message when the RPM package udev-configure-printer could not be removed:
                    _("Failed to remove udev-configure-printer.")
                  );
      y2milestone( "ApplyAutoconfigSettings failed to remove '%1'", package_name );
      return false;
    }
  }
  y2milestone( "leaving ApplyAutoconfigSettings successfully" );
  return true;
}

symbol handleAutoconfig( string key, map event )
{ y2milestone( "entering handleAutoconfig with key '%1'\nand event '%2'", key, event );
  if( "ValueChanged" == event["EventReason"]:"" )
  { if( "udev_configure_printer_check_box" == event["WidgetID"]:"" )
    { // Ignore its return code because it shows already Popup::Error messages:
      ApplyAutoconfigSettings();
    }
  }
  if( "Activated" == event["EventReason"]:"" )
  { if( `abort == event["ID"]:nil || `cancel == event["ID"]:nil || `back == event["ID"]:nil )
    { // There is no "abort" functionality which does a sudden death of the whole module.
      // There is only a "Cancel" functionality (via the "back" button) which goes back one step
      // and the button with the "abort" functionality is not shown at all (see dialogs.ycp).
      // Unfortunately when the YaST package installer is run via Printerlib::TestAndInstallPackage
      // it leaves a misused "abort" button labeled "Skip Autorefresh" with WidgetID "`abort"
      // so that this case is mapped to the "Cancel" functionality:
      return `autoconfig_back;
    }
    if( `next == event["ID"]:nil )
    { return `autoconfig_next;
    }
  }
  return nil;
}

/* EOF */
}
