/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:        include/printer/wizards.ycp
 * Package:     Configuration of printer
 * Summary:     Wizards definitions
 * Authors:     Johannes Meixner <jsmeix@suse.de>
 *
 * $Id: wizards.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "printer";

import "Sequencer";
import "Wizard";

include "printer/readwrite.ycp";
//include "printer/overview.ycp";
include "printer/basicadd.ycp";
include "printer/basicmodify.ycp";
include "printer/connectionwizard.ycp";
include "printer/printingvianetwork.ycp";
include "printer/dialogs.ycp";

/**
 * Workflow of the printer configuration
 * @return sequence result
 */
any MainSequence()
{ map aliases = $[ "overview" : ``( runMainDialog() ),
                   "add" : ``( BasicAddDialog() ),
                   "add_connection_wizard" : ``( ConnectionWizardDialog() ),
                   "modify" : ``( BasicModifyDialog() ),
                   "modify_connection_wizard" : ``( ConnectionWizardDialog() ),
                   "modify_driver_options" : ``( DriverOptionsDialog() ),
                   "printing_via_network_connection_wizard" : ``( ConnectionWizardDialog() )
                 ];
  map sequence = $[ "ws_start" : "overview",
                    "overview": $[ `abort : `abort,
                                   `next : `next,
                                   `add : "add",
                                   `modify : "modify",
                                   `delete : "overview",
                                   `connection_wizard : "printing_via_network_connection_wizard"
                                 ],
                    "add" : $[ `abort : `abort,
                               `next : "overview",
                               `connection_wizard : "add_connection_wizard"
                             ],
                    "add_connection_wizard" : $[ `abort : `abort,
                                                 `next : "add"
                                               ],
                    "modify" : $[ `abort : `abort,
                                  `next : "overview",
                                  `connection_wizard : "modify_connection_wizard",
                                  `driver_options : "modify_driver_options"
                                ],
                    "modify_connection_wizard" : $[ `abort : `abort,
                                                    `next : "modify"
                                                  ],
                    "modify_driver_options" : $[ `abort : `abort,
                                                 `next : "modify"
                                               ],
                    "printing_via_network_connection_wizard" : $[ `abort : `abort,
                                                                  `next : "add"
                                                                ],
                  ];
  return Sequencer::Run( aliases, sequence );
}

/**
 * Whole configuration of printer
 * @return sequence result
 */
any PrinterSequence()
{ map aliases = $[ "read" : [ ``( ReadDialog() ), true ],
                   "main" : ``( MainSequence() ),
                   "write" : [ ``( WriteDialog() ), true ]
                 ];
  map sequence = $[ "ws_start" : "read",
                    "read" : $[ `abort : `abort,
                                `next : "main"
                              ],
                    "main" : $[ `abort : `abort,
                                `next : "write"
                              ],
                    "write" : $[ `abort : `abort,
                                 `next : `next
                               ]
                  ];
    Wizard::CreateDialog();
    any ret = Sequencer::Run(aliases, sequence);
    UI::CloseDialog();
    return ret;
}

/**
 * Whole configuration of printer but without reading and writing.
 * For use with autoinstallation.
 * @return sequence result
 */
any PrinterAutoSequence()
{ /* Initialization dialog caption */
  string caption = _("Printer Configuration");
  /* Initialization dialog contents */
  term contents = `Label( _("Initializing...") );
  Wizard::CreateDialog();
  Wizard::SetContentsButtons( caption,
                              contents,
                              "",
                              Label::BackButton(),
                              Label::NextButton()
                            );
  any ret = MainSequence();
  UI::CloseDialog();
  return ret;
}

/* EOF */
}
