/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:        include/printer/dialogs.ycp
 * Package:     Configuration of printer
 * Summary:     DialogTree definition
 * Authors:     Michal Zugec <mzugec@suse.de>
 *
 * $Id: dialogs.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "printer";

import "Label";
import "DialogTree";

include "printer/helps.ycp";
include "printer/overview.ycp";
include "printer/printingvianetwork.ycp";
include "printer/sharing.ycp";
include "printer/policies.ycp";
include "printer/autoconfig.ycp";

map<string, map<string,any> > wd = $[
	"OVERVIEW" : $[
		"widget" : `custom,
		"custom_widget" : widgetOverview,
		"init"	 : initOverview,
		"handle" : handleOverview,
		"help"	 : HELPS["overview"]:""
	],
	"NETWORKPRINTING" : $[
		"widget" : `custom,
		"custom_widget" : widgetNetworkPrinting,
                "init" : initNetworkPrinting,
		"handle" : handleNetworkPrinting,
                "store" : storeNetworkPrinting,
		"help" : HELPS["printing_via_network_dialog"]:""
	],
	"SHARING" : $[
		"widget" : `custom,
		"custom_widget" : widgetSharing,
                "init" : initSharing,
                "handle": handleSharing,
                "store" : storeSharing,
		"help"	: HELPS["sharing_dialog"]:""
	],
        "POLICIES" : $[
                "widget" : `custom,
                "custom_widget" : widgetPolicies,
                "init"  : initPolicies,
                "store" : storePolicies,
                "help"  : HELPS["policies"]:""
        ],
	"AUTOCONFIG" : $[
		"widget" : `custom,
		"custom_widget" : widgetAutoconfig,
		"init"	: initAutoconfig,
		"store"	: storeAutoconfig,
		"help"	: HELPS["autoconfig"]:""
	]
];

map tabs_descr = $[
        "overview" : $[
          "header" : _("Printer Configurations"),
          "tree_item_label" : _("Printer Configurations"),
          "contents" : `VBox (
            "OVERVIEW"
          ),
         "widget_names" : ["OVERVIEW"]
        ],
        "network" : $[
          "header" : _("Print via Network"),
          "tree_item_label" : _("Print via Network"),
          "contents" : `VBox (
            "NETWORKPRINTING"
          ),
         "widget_names" : ["NETWORKPRINTING"]
        ],
        "sharing" : $[
          "header" : _("Share Printers"),
          "tree_item_label" : _("Share Printers"),
          "contents" : `VBox (
            "SHARING"
          ),
         "widget_names" : ["SHARING"]
        ],
        "policies" : $[
          "header" : _("Policies"),
          "tree_item_label" : _("Policies"),
          "contents" : `VBox (
            "POLICIES"
          ),
         "widget_names" : ["POLICIES"]
        ],
        "autoconfig" : $[
          "header" : _("Autoconfig Settings"),
          "tree_item_label" : _("Autoconfig Settings"),
          "contents" : `VBox (
            "AUTOCONFIG"
          ),
         "widget_names" : ["AUTOCONFIG"]
        ],
];


symbol runMainDialog(){
  string caption = _("Detected Printers");

   symbol ret = DialogTree::ShowAndRun ($[
            "ids_order"         : [ "overview", "network", "sharing", "policies", "autoconfig" ],
            "initial_screen"    : "overview",
            "screens"           : tabs_descr,
            "widget_descr"      : wd,
            "back_button"       : nil,//Label::BackButton(),
            "abort_button"      : Label::CancelButton(),
            "next_button"       : Label::OKButton ()
        ]);
    return ret;
}


/* EOF */
}
