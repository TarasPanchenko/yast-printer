/**
 * File:
 *  Write.ycp
 *
 * Module:
 *  Printer configurator
 *
 * Summary:
 *  Miscelaneous tests.
 *
 * Authors:
 *  Petr Blahos <pblahos@suse.cz>
 *
 * $Id$
 *
 */

{
    include "testsuite.ycp";
    map I_READ = $[
	"target" : $[
	    "size" : -1,
	    "tmpdir" : "/tmp/",
	    "yast2" : nil,
	],
	"sysconfig" : $[
	    "console" : $[
		"CONSOLE_FONT" : "",
		"CONSOLE_SCREENMAP" : "",
		"CONSOLE_UNICODEMAP" : "",
		"CONSOLE_MAGIC" : "",
		"CONSOLE_ENCODING" : "",
	    ],
	    "language" : $[
		"RC_LANG" : "",
		"DEFAULT_LANGUAGE" : "",
	    ],
	],
	"etc" : $[
	    "install_inf" : $[
		"Cmdline" : "",
		"InstMode" : nil,
	    ],
	],
	"probe" : $[
	    "architecture" : "i386",
	    "has_apm" : true,
	    "has_pcmcia" : false,
	    "has_smp" : false,
	    "system" : [],
	    "memory" : [],
	    "cpu" : [],
	    "cdrom" : $[
		"manual" : [],
	    ],
	    "floppy" : $[
		"manual" : [],
	    ],
	],
    ];
    map I_WRITE = $[];
    map I_EXEC = $[
	"target" : $[
	    "bash_output" : $[],
	],
    ];
    TESTSUITE_INIT ([I_READ, I_WRITE, I_EXEC], 0);
    import "Pkg";
    import "Printer";
    import "Progress";
    import "Mode";
    import "Spooler";
    TESTSUITE_CLEAN ();

    Mode::test = true;

    Progress::off ();
    Pkg::FAKE (`IsProvided, false);

    map READ = $[];
    map WRITE = $[];
    map EXEC = $[];

    WRITE = $[
	];
    EXEC = $[
	"target" : $[
	    "mkdir" : true,
	    "bash_output": $["exit": 0, "stdout": "", "srderr": "",],
	],
    ];
    READ = $[
	"var" : $[
	    "lib" : $[
		"yast" : $[
		    "unique": []
		]
	    ]
	],
	"init" : $[
	    "scripts" : $[
		"exists" : true,
		"runlevel": $[],
		"comment" : $[],
	    ]
	],
	"target" : $[
	    "string" : "",
	    "tmpdir" : "/tmp",
	    "ycp" : $["" : $["" : $["" : $["filename" : "filename"]]]],
            "size" : 555,
	],
	"targetpkg" : $["installed" : true],
        "ppd" : $[
            "db" : $[
                "changed" : false,
            ],
        ],
    ];

    Spooler::Set ("lprng");

    TEST (``(Printer::Write ()), [READ, WRITE, EXEC], 0);
    DUMP ("====================================================");
    Printer::printcap = [
	$[  "name" : "lp",
	    "uri" : "parallel://dev/lp0",
	    "changed" : true,
	    "database" : "foomatic",
	],
	$[  "name" : "lpx",
	    "uri" : "parallel://dev/lp0",
	    "saved" : $[ "printcap_part" : "yes"],
	    "changed" : true,
	    "database" : "foomatic",
	]
	];
    Printer::index = 1;
    Printer::deletePrinter ();
    TEST (``(Printer::Write ()), [READ, WRITE, EXEC], 0);
    DUMP ("====================================================");
}
