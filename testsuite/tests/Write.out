Write	.target.ycp "/var/lib/YaST2/printers" $["default":"", "deleted":[], "printers":[]] true
Execute	.target.bash "/bin/chmod 600 /var/lib/YaST2/printers" 0
Read	.target.size "/etc/printcap" 0
Execute	.target.bash "/bin/chmod 0644 /etc/printcap" 0
Write	.sysconfig.printer.DEFAULT_PRINTER "none" true
Write	.sysconfig.printer nil true
Read	.init.scripts.exists "lpd" true
Read	.init.scripts.exists "lpd" true
Read	.init.scripts.runlevel "lpd" $[]
Read	.init.scripts.comment "lpd" $[]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/lpd" $["exit":0, "srderr":"", "stdout":""]
Return	true
Dump	====================================================
Execute	.target.bash "/usr/lib/lpdfilter/bin/lprsetup -lprng -delete lpx" 0
Read	.target.size "/etc/printcap" 0
Execute	.target.bash "/bin/rm -r /etc/lpdfilter/lpx /var/spool/lpd/lpx; \n" 0
Execute	.target.mkdir "/etc/lpdfilter/lp" true
Execute	.target.bash "/usr/lib/lpdfilter/bin/lprsetup -lprng -overwrite lp -device /dev/lp0  -driver upp -own -color -sf" 0
Read	.target.size "/etc/printcap" 0
Write	.printerdb.upp."" $[] "-supModel=\" \"\n"
Execute	.target.mkdir "/etc/lpdfilter/lp" true
Write	.target.string "/etc/lpdfilter/lp/upp" "-supModel=\" \"\n" true
Execute	.target.bash "/bin/chmod 644 /etc/lpdfilter/lp/upp" 0
Write	.target.string "/etc/lpdfilter/lp/conf" "#\n# for documentation see /usr/lib/lpdfilter/global/optional.options\n#\n\n" true
Execute	.target.bash "/bin/chmod 660 /etc/lpdfilter/lp/conf ; /bin/chown lp:lp /etc/lpdfilter/lp/conf" 0
Write	.target.ycp "/var/lib/YaST2/printers" $["default":"lp", "deleted":[$["name":"lpx", "states":$["cups-state":"changed", "lprng-state":"commited"], "type":"printer"]], "printers":[$["accepting":true, "bannerend":"none", "bannerstart":"none", "lprng-state":"commited", "name":"lp", "state":"idle", "uri":"parallel://dev/lp0"]]] true
Execute	.target.bash "/bin/chmod 600 /var/lib/YaST2/printers" 0
Read	.target.size "/etc/printcap" 0
Execute	.target.bash "/bin/chmod 0644 /etc/printcap" 0
Write	.sysconfig.printer.DEFAULT_PRINTER "lp" true
Write	.sysconfig.printer nil true
Read	.init.scripts.exists "lpd" true
Read	.init.scripts.exists "lpd" true
Read	.init.scripts.runlevel "lpd" $[]
Read	.init.scripts.comment "lpd" $[]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/lpd" $["exit":0, "srderr":"", "stdout":""]
Return	true
Dump	====================================================
