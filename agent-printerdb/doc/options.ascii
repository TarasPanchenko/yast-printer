
#
# PasteOption just pastes all values of the option in place
#
Option papersize
	Value { -sPAPERSIZE=a1 } Text { a 'a1' }
	Value { -sPAPERSIZE=a2 } Text { 'a2' }
	Value { -sPAPERSIZE=a3 } Text { 'a3' }
	PasteOption papersizemaxa4
	Value { -sPAPERSIZE=obf } Text { Obfuscated paper at the end }
EndOption papersize

Option papersizemaxa4
	Value { -sPAPERSIZE=a4dj } Text {'a4' for inkjet printers (using 'a4dj' with bigger margins than 'a4') (1) }
	Value { -sPAPERSIZE=a4 } Text {'a4' (2) }
	Value { -sPAPERSIZE=a5 } Text { 'a5'(3) }
	Value { -sPAPERSIZE=a6 } Text { 'a6' (4) }
	Value { -sPAPERSIZE=flsa } Text {'flsa' (5) }
	Value { -sPAPERSIZE=flse } Text { 'flse' (6) }
EndOption

#
# This describes how cyclicly pasted options work. It is
# pasted until there is request to paste option into itself.
# (See options cycling and sub-cycling in lexmark z11)
#
Option { cycling }
	Value { -sGS=aa } Text { aa }
	Value { -sGS=bb } Text { bb }
	Value { -sGS=cc } Text { cc }
	PasteOption { sub-cyc }
EndOption { cycling }

Option { sub-cyc }
	Value { -sGS=dd } Text { dd }
	Value { -sGS=ee } Text { ee }
	PasteOption { cycling }
EndOption { sub-cyc }

Option { stp-photo-media-canon }
	Value { -sMediaType="Photo Paper Pro" }    Text { photo paper pro (using '-sMediaType="Photo Paper Pro"') (1) }
	Value { -sMediaType="Glossy Photo Paper" } Text { glossy photo paper (using '-sMediaType="Glossy Photo Paper"') (2) }
	Value { -sMediaType="Glossy Photo Cards" } Text { glossy photo cards (using '-sMediaType="Glossy Photo Cards"') (3) }
EndOption { stp-photo-media-canon }

Option { stp-photo-media }
	Value {  } Text { for Canon printers }
		UseOption { stp-photo-media-canon } Text { Media type for Canon printers }
	Value {  } Text { for Epson stylus printers }
		UseOption { stp-photo-media-epson } Text { Media type for Epson stylus printers }
	Value {  } Text { for PCL printers (HP and Lexmark) }
		UseOption { stp-photo-media-pcl }   Text { Media type for PCL printers }
	PasteOption { stp-photo-media-canon }
EndOption { stp-photo-media }

Option { stp-photo-media-epson }
	Value { -sMediaType="Photo Quality Inkjet Paper" } Text { photo quality inkjet paper (using '-sMediaType="Photo Quality Inkjet Paper"') }
	Value { -sMediaType="Photo Paper" } Text { photo paper (using '-sMediaType="Photo Paper"') }
EndOption { stp-photo-media-epson }

Option { stp-photo-media-pcl }
	Value { -sMediaType="Glossy/Photo" } Text { glossy/photo (using '-sMediaType="Glossy/Photo"') }
	Value { -sMediaType="Quick-dry Photo" } Text { quick-dry photo (using '-sMediaType="Quick-dry Photo"') }
	PasteOption { nonexisting }
EndOption { stp-photo-media-pcl }

Option { canon-bjc-600-color }
	Value { -sCOLOR=color
		-dBitsPerPixel=8 }
	Text { color printing (using '-dBitsPerPixel=8') }
	UseOption { canon-bjc-600-color-additional1 } Text { This option should be reported by parses as undefined }
	UseOption { canon-bjc-600-color-additional2 } Text { This option should be reported by parses as undefined }

	Value { -sCOLOR=color
	-dBitsPerPixel=16 }
	Text { color printing (using '-dBitsPerPixel=16') }

	Value { -sCOLOR=color
	-dBitsPerPixel=24 }
	Text { color printing (using '-dBitsPerPixel=24') }

	Value { -sCOLOR=color
	-dBitsPerPixel=32 }
	Text { color printing (using '-dBitsPerPixel=32') }
EndOption { canon-bjc-600-color }

Option { stp-hue }
	ValueFloat { 0.0 100.0 0.1 } Pattern { -sHue=% }
EndOption { stp-hue }

Option { stp-int }
	ValueInt { 0 100 0 2 } Pattern { -dPercentage="{% \%\}" }
EndOption { stp-int }

Option { stp-strange }
	ValueFloat { 0.0 100.0 100.1 } Pattern { -sStrange="haha hu%huhu a"huhuhu }
EndOption { stp-hue }

#
# This demonstraces that value-based options can not be pasted.
#
Option { generic-resolution }
	Comment { <p>Well ehm you can not use all resolutions for all printers. Use with care!</p> }
	Value { -r300x300 } Text { 300x300 }
	Value { -r600x600 } Text { 600x600 }
	Value { -r1200x1200 } Text { 1200x1200 }
	Value { -r360x360 } Text { 360x360 }
	Value { -r720x720 } Text { 720x720 }
	Value { -r1440x1440 } Text { 1440x1440 }
	PasteOption { stp-strange }
EndOption { generic-resolution }

#
# This demonstrates PasteOption + suboptions
#
Option { gs-cdj500-BitsPerPixel-mono }
    Value { -d1 } Text { mono: val1 }
    Value { -d2 } Text { mono: val2 }
EndOption { gs-cdj500-BitsPerPixel-mono }
Option { gs-cdj500-BitsPerPixel-color }
    Value { -c1 } Text { color: val1 }
    Value { -c2 } Text { color: val2 }
EndOption { gs-cdj500-BitsPerPixel-color }
Option { gs-cdj500-BlackCorrect }
    Value { -bc1 } Text { BlackCorrect: val1 }
    Value { -bc2 } Text { BlackCorrect: val2 }
EndOption { gs-cdj500-BlackCorrect }
Option { gs-pjxl300-PrintQuality }
    Value { -pq1 } Text { PrintQuality: val1 }
    Value { -pq2 } Text { PrintQuality: val2 }
EndOption { gs-pjxl300-PrintQuality }
Option { gs-pjxl300-RenderType }
    Value { -rt1 } Text { RenderType: val1 }
    Value { -rt2 } Text { RenderType: val2 }
EndOption { gs-pjxl300-RenderType }


Option { gs-cdj500-all-parameters }
        Comment { for documentation see ... }
        Value {  } Text { special driver parameters }
                UseOption { gs-cdj500-BitsPerPixel-mono }
                     Text { monochrome printing }
                UseOption { gs-cdj500-BitsPerPixel-color }
                     Text { color printing }
                UseOption { gs-cdj500-BlackCorrect }
                     Text { color correction }
EndOption { gs-cdj500-all-parameters }

Option { gs-pjxl300-all-parameters }
        PasteOption { gs-cdj500-all-parameters }
                UseOption { gs-pjxl300-PrintQuality }
                     Text { quality }
                UseOption { gs-pjxl300-RenderType }
                     Text { render type }
EndOption { gs-pjxl300-all-parameters }

#
# First real data :-)
#

Option { gs-stcolor-Ctransfer }
  ValueFloat { 0.1 1.0 _ 0.1 }
     Pattern { -dCtransfer="{0.0 %\}" }
EndOption { gs-stcolor-Ctransfer }

Option { gs-stcolor-Mtransfer }
  ValueFloat { 0.1 1.0 _ 0.1 }
     Pattern { -dMtransfer="{0.0 %\}" }
EndOption { gs-stcolor-Mtransfer }

Option { gs-stcolor-Ytransfer }
  ValueFloat { 0.1 1.0 _ 0.1 }
     Pattern { -dYtransfer="{0.0 %\}" }
EndOption { gs-stcolor-Ytransfer }

Option { gs-stcolor-Ktransfer }
  ValueFloat { 0.1 1.0 _ 0.1 }
     Pattern { -dKtransfer="{0.0 %\}" }
EndOption { gs-stcolor-Ktransfer }

Option { gs-stcolor-density }
  Value { } Text { density }
    UseOption { gs-stcolor-Ctransfer }
      Text { density 'cyan' (using '-dCtransfer="{0.0 ...\}"') }
    UseOption { gs-stcolor-Mtransfer }
      Text { density 'magenta' (using '-dMtransfer="{0.0 ...\}"') }
    UseOption { gs-stcolor-Ytransfer }
      Text { density 'yellow' (using '-dYtransfer="{0.0 ...\}"') }
    UseOption { gs-stcolor-Ktransfer }
      Text { density 'black' (using '-dKtransfer="{0.0 ...\}"') }
EndOption { gs-stcolor-density }

Option { gs-stcolor-special-parameters }
  Comment { for documentation see
            file:/usr/share/doc/packages/ghostscript/doc/Devices.htm }
  Value { } Text { special driver parameters }
    UseOption { gs-stcolor-weaving }
      Text { 'weaving' }
    UseOption { gs-stcolor-Unidirectional }
      Text { unidirectional printing }
    UseOption { gs-stcolor-OutputCode }
      Text { output code }
    UseOption { gs-stcolor-density }
      Text { density }
EndOption { gs-stcolor-special-parameters }

Option { gs-stcolor-all-parameters }
  Value { } Text { driver parameters }
    UseOption { gs-stcolor-BitsPerPixel }
      Text { monochrome or color printing }
    UseOption { gs-stcolor-special-parameters }
      Text { special driver parameters }
EndOption { gs-stcolor-all-parameters }

Option { gs-stcolor }
  Value { -sDEVICE=stcolor }
      Text { driver 'stcolor' (using '-sDEVICE=stcolor') }
    UseOption { resolution-360-low } Text { resolution }
    UseOption { gs-stcolor-all-parameters }
      Text { driver parameters }
EndOption { gs-stcolor }


