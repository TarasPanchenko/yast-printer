<?xml version="1.0" encoding='ISO-8859-1'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "/usr/share/sgml/db41xml/docbookx.dtd"

[
<!ENTITY version "0.01">
<!ENTITY dx "DocBook-XML">
<!ENTITY dbbuild SYSTEM "dbbuild.xml">
<!ENTITY equiv SYSTEM "equiv.xml">
<!ENTITY options SYSTEM "options.xml">
<!ENTITY iface SYSTEM "iface.xml">
]>

<article>
<title>yast2-printer - PPD agent</title>
    <section id="tasks">
        <title>Task of PPD agent</title>
	<para>
The task of PPD agent is to provide interface to use database of printers made from PPD files. Provided functions are following:
	</para>
        <itemizedlist>
	    <listitem><para>Create file containing YCP structure describing currently installed PPD files and in them contained vendors and models</para></listitem>
	    <listitem><para>Check for need whether rebuild database is needed (some PPD file was changed/added/removed)</para></listitem>
	    <listitem><para>Maintain list of mapping from Model names mentioned in PPD files and IEEE names because of detection (is used when creating file with 
		PPD files description structure)</para></listitem>
	    <listitem><para>Create list of options in PPD file and their values</para></listitem>
	    <listitem><para>Examine and set default value of each option</para></listitem>
	    <listitem><para>Generate parameters for LPDfilter -- not implemented yet</para></listitem>
        </itemizedlist>
	<para>
All provided functions must be available without requiring any spooler running, because the agent may be used
for  multiple spoolers or without any concrete spooler running. Using of library functions of spoolers is possible,
if required packages can't conflict with any packages required by other spoolers.
	</para>
	<para>
Much time wasting functions should be able to be done asynchronous, because of need to show any progress. The only
currently known function, which will take a lot of time, is generating database of PPD files when running first
time, or when some PPD file changes, is added or removed. Checking of these situations should be fast enough.
	</para>

    </section>
    <section>
	<title>TODO</title>
	<itemizedlist>
	    <listitem><para>Make possible to update pre-built database faster than complete rebuild</para></listitem>
	    <listitem><para>Create the pre-built database with multiple keys (for different purposes)</para></listitem>
	    <listitem><para>Add rules for "strange" PPD files to get correct vendor/model from them - before every release</para></listitem>
	    <listitem><para>As there is no reason for having two separate internal structures for handling, these structures should be merged into one</para></listitem>
	</itemizedlist>
    </section>

&dbbuild
&equiv
&options
&iface

</article>

